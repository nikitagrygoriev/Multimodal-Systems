<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE ImageAcquisitionInfo [
<!--

This XML file is used to store static information for a particular
vendor's image acquistion devices.

-->

<!-- The ImageAcquisitionInfo node is the root node of the file.  It
     contains zero or one Help nodes and zero or more Device nodes. -->
<!ELEMENT ImageAcquisitionInfo (Help?, Property*, Include*, Source*, TriggerInfo?, Device*)>

<!-- The Help node, if present, must contain one or more AdaptorHelp nodes. -->
<!ELEMENT Help (AdaptorHelp+)>

<!-- AdaptorHelp nodes have some amount of text, followed by zero or more
     DeviceHelp nodes followed by zero or one SeeAlso lines.  The text will
     be formated in MATLAB exactly as it is entered in this file so no extra
     spacing or indentation should be used.  Because the node is of mixed
     type, it is not possible to specify the exact order or number of any of
     these elements within the DTD, so care should be taken when adding
     them. -->
<!ELEMENT AdaptorHelp (#PCDATA | DeviceHelp | SeeAlso)*>

<!-- The AdaptorHelp node contains one attribute, the name of the property
     to which the help applies. -->
<!ATTLIST AdaptorHelp property CDATA #REQUIRED>

<!-- The AdaptorHelp node contains the DeviceHelp node which adds extra help
     for a specific piece of hardware. -->
<!ELEMENT DeviceHelp (#PCDATA)>

<!-- The device attribute of the DeviceHelp node contains the name of the
     board that the help is for.  This should be the same as the name
     attribute of the Device node for the hardware. -->
<!ATTLIST DeviceHelp device CDATA #REQUIRED>

<!-- The SeeAlso node of the AdaptorHelp node specifies the "see also" line
     that should appear in MATLAB. -->
<!ELEMENT SeeAlso (#PCDATA)>

<!-- Device nodes can have zero or more Section nodes followed by zero or
     more VideoFormat, Include, Section, or Property nodes and zero or one
     TriggerInfo nodes. -->
<!ELEMENT Device (VideoFormat*, Include*, Section*, Property*, TriggerInfo?)>

<!-- Device nodes have exactly one property "name", which is the name of the
device as known by the cooresponding adaptor.  This name usually is the name
of the device from the SDK.  -->
<!ATTLIST Device name CDATA #REQUIRED>

<!-- The VideoFormat element can define properties and trigger information that
     is specific to a known video format.  It is legal for the VideoFormat
     element to also contain Include and Section elements. -->
<!ELEMENT VideoFormat (Include*, Section*, Property*, TriggerInfo?)>

<!-- VideoFormat nodes have exactly one property "name", which is the video
     format supported by the device.  This video format usually is the name of
     the video format as used by the adaptor. -->
<!ATTLIST VideoFormat name CDATA #REQUIRED>

<!-- Section nodes can have zero or more Include nodes.  The Include nodes
     can be followed by zero or more Property nodes or zero or one TriggerInfo
     nodes.  It is not possible to mix Property nodes and TriggerInfo nodes in
     the same Section.  The Property and TriggerInfo nodes follow the same
     rules as the nodes directly under a device node. The name attribute is
     required and is used by the Include nodes to locate a particular 
     section. -->
<!ELEMENT Section (Include*, (Property* | TriggerInfo?))> 
<!ATTLIST Section name CDATA #REQUIRED>

<!-- The optional Include element can be used to simplify the XML file.  By
including -->
<!ELEMENT Include EMPTY>

<!-- The value of the tag property should be the name of a Section node. -->
<!ATTLIST Include tag CDATA #REQUIRED>

<!-- The Property node describes the properties for a specific peice of
     hardware.  Property nodes can have zero or more EnumConstraintValue
     nodes.  The EnumConstraintValue nodes are only valid if the constraint
     attribute is equal to "enum". -->
<!ELEMENT Property (EnumConstraintValue*)>

<!-- The attributes of the Property node.  The attributes are:
       constraint     - Constraints on property values.  Defines the what kind of
                        property will be created.  Valid values are:

                        bounded           - A bounded property.  Requires the 
			                    min and max attributes to be set.
	                enum              - A list of enumerations.
	                none              - No constraints, property can hold 
	                                    any valid MATLAB variable.
	                zeroorpositive    - Value which must be greater than 
	                                    zero.
	                zeroinforpositive - Value which must be greater than 
	                                    zero or infinite.
                        positive          - Value which must be positive.
	                inforpositive     - Value must be positive or infinite.
       deviceSpecific - Indicates whether or not the property is vendor
                        specific.  Valid values are:
                          true  - The property is vendor specific.
                          false - The property is not vendor specific.
       name           - The property name as it should be listed
       readOnly       - The read-only status of the property.  Valid values 
                        are:
                          always         - The property is always read-only.
                          never          - The property is never read-only.
                          whileRunning   - The property is read-only when the 
                                           device's Running property is "on".
       type           - The data type of the property.  Valid values are:
                          cell   - Value is a cell array.  Requires a 
                                   constraint value of none.
                          double - Value is a double value.  Requires a 
                                   constraint value of none, zeroorpositive, 
                                   zeroinforpositive, or bounded.
                          int    - Value is an integer value.  Requires a 
                                   constraint value of none, zeroorpositive, 
                                   zeroinforpositive, positive, inforpositive,
                                   or bounded.
                          string - Value is a string.  Requires a constraint 
                                   value of none or enum.
       min            - The minimum allowable value of the property.
       max            - The maximum allowable value of the property.
       optionial      - If set to "on", the property will not be created and 
                        added to the object by default.  Instead, the adaptor 
                        must explicity create the object.  If not present or 
                        set to "off" the property will automatically be created
                        and added to the object.
       default        - The default value of the property.

     The constraint, deviceSpecific, name, readOnly, and type attributes are 
     required.  The min, max, optional, and default attributes are optional. 
-->
<!ATTLIST Property constraint (bounded | enum | none | zeroorpositive | zeroinforpositive | positive | inforpositive)  #REQUIRED
		   deviceSpecific (true | false)                  #REQUIRED
		   name           CDATA                           #REQUIRED
		   readOnly       (always | never | whileRunning) #REQUIRED
		   type           (cell | double | int | string)  #REQUIRED
		   min            CDATA                           #IMPLIED
		   max            CDATA                           #IMPLIED
		   optional       (on | off)                      #IMPLIED
		   default        CDATA                           #IMPLIED>

<!-- The EnumConstraintValue does not have any sub-nodes.  Both the id and
     name attributes are required. The name of the constraint is the name
     that will be displayed within MATLAB.  The id can be set to any unique
     identifier.  It is typically set to some value that is recognized by
     the vendor's SDK.--> 
<!ELEMENT EnumConstraintValue EMPTY>
<!ATTLIST EnumConstraintValue id   CDATA #REQUIRED
                              name CDATA #REQUIRED>

<!-- The Source element defines a source to be added to the object.  The
     name is the name of the sources and will the value that appears in the
     source's "Name" property.  The id can be any unique identifier.  It
     is typically set to some value that is recognized by the vendor's SDK.
-->
<!ELEMENT Source EMPTY>
<!ATTLIST Source id   CDATA #REQUIRED
                 name CDATA #REQUIRED>

<!-- The TriggerInfo node must have one or more TriggerSource nodes. It
     defines the triggers that will be available for a particular device. -->
<!ELEMENT TriggerInfo (Include*, TriggerSource+)>

<!-- Each TriggerSource must have one or more TriggerCondition nodes. The
     TriggerSource node has two attributes, id and name, which are both
     required. The name will appear in the TriggerSource field of the data
     returned by the TRIGGERINFO function.  The id can be any unique
     identifier.  It is typically set to some value that is recognized by
     the vendor's SDK. -->
<!ELEMENT TriggerSource (TriggerCondition*, Include*)>
<!ATTLIST TriggerSource id   CDATA #REQUIRED
                        name CDATA #REQUIRED>
			
<!-- The TriggerCondition is a terminal node.  Both the name and id
     attributes are required.  The name will appear in the TriggerCondition
     field of the data returned by the TRIGGERINFO function.  The id can be
     any unique identifier.  It is typically set to some value that is
     recognized by the vendor's SDK. -->
<!ELEMENT TriggerCondition EMPTY>
<!ATTLIST TriggerCondition id   CDATA #REQUIRED
                           name CDATA #REQUIRED>

]>
<!-- 
JSH 10-15-2003 
Copyright 2001-2010 The MathWorks, Inc.




-->
<ImageAcquisitionInfo>
	<Help>
<AdaptorHelp property="Brightness">Specify the brightness, also called the black level.

Brightness describes the difference in intensity of light reflected from or 
transmitted through an image independent of its hue and saturation. 

For some devices, the value is expressed in IRE units * 100. For other 
devices, the units are arbitrary.
</AdaptorHelp>
<AdaptorHelp property="Contrast">Specify the image contrast.

Contrast specifies the tonal gradation between the highlights, midtones, and 
shadows in an image.
</AdaptorHelp>
<AdaptorHelp property="Saturation">Specify the image saturation.

Saturation is the amount of gray (intensity) in a particular color. A color with 
more gray is considered less saturated, while a bright color, one with very little 
gray in it, is considered highly saturated. 

The units for this property are arbitrary.
</AdaptorHelp>
<AdaptorHelp property="RedBalance">Specify the red chroma balance.

The units for this property are arbitrary.
<SeeAlso>WhiteBalanceTemperature, BlueBalance</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="BlueBalance">Specify the blue chroma balance.

The units for this property are arbitrary.
<SeeAlso>WhiteBalanceTemperature, RedBalance</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="Gamma">Specify the gamma adjustment.

Gamma adjustment corrects for nonlinearities in the camera and the display
device.
</AdaptorHelp>
<AdaptorHelp property="HorizontalFlip">Mirror the picture horizontally.
<SeeAlso>VeriticalFlip</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="VerticalFlip">Mirror the picture vertically.
<SeeAlso>HorizontalFlip</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="PowerLineFrequency">Set the frequency filter.
The power line frequency filter can be used to avoid flicker due to the
change in light intensity due to the frequency of the power line.
</AdaptorHelp>
<AdaptorHelp property="Sharpness">Specify the image sharpness.

Sharpness specifies the subjective impression of the amount of detailed 
information provided in a picture image.
</AdaptorHelp>
<AdaptorHelp property="BacklightCompensation">Specify the backlight compensation setting.

BacklightCompensation allows you to improve the image quality when viewing
a scene where the background has a high illumination level.
</AdaptorHelp>
<AdaptorHelp property="Pan">Specify the camera's pan setting.

This property moves the camera horizontally.  The units are in arc seconds with
negative values to the left and positive values to the right.
<SeeAlso>Tilt</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="Tilt">Specify the camera's tilt setting.

This property moves the camera vertically.  The units are in arc seconds with
negative values below the origin and positive values above it.
<SeeAlso>Pan</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="ExposureAutoPriority">Specify if the device can alter the frame rate.

This property specifies if the capture device is allowed to alter the frame 
rate in order to support an automatic exposure.  If the exposure is longer 
than the nominal frame rate would allow and this property is set to 'on',
the frame rate will be decreased in order to achieve the necessary exposure 
time.
</AdaptorHelp>
<AdaptorHelp property="Hue">Specify the image hue.

Hue specifies the main attribute of a color that distinguishes it from other 
colors in the image. 

Depending on the acquisition device, this property may have an associated 
mode property allowing this value to be controlled automatically by the device, 
or for it to be manually configured.
<SeeAlso>HueMode</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="HueMode">Specify the Hue property to be controlled manually, or automatically.

If specified as auto, the Hue value is managed by the device. If configured to 
manual, it is user specified.

Note, when switching between auto and manual modes, Hue is updated to 
reflect the current value. If mode is auto, setting the Hue property will also 
update the mode to manual.
<SeeAlso>Hue</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="WhiteBalanceTemperature">Specify the white balance, as a color temperature in degrees Kelvin.

Depending on the acquisition device, this property may have an associated 
mode property allowing this value to be controlled automatically by the device, 
or for it to be manually configured.
<SeeAlso>WhiteBalanceMode</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="WhiteBalanceMode">Specify the WhiteBalanceTemperature property to be controlled manually, or automatically.

If specified as auto, the WhiteBalanceTemperature value is managed by the
device. If configured to manual, it is user specified.

Note, when switching between auto and manual modes, WhiteBalanceTemperature is 
updated to reflect the current value. If mode is auto, setting the 
WhiteBalanceTemperature property will also update the mode to manual.
<SeeAlso>WhiteBalanceTemperature</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="Gain">Specify the gain adjustment. Zero is normal.

Positive values are brighter and negative values are darker.

Depending on the acquisition device, this property may have an associated 
mode property allowing this value to be controlled automatically by the device, 
or for it to be manually configured.
<SeeAlso>GainMode</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="GainMode">Specify the Gain property to be controlled manually, or automatically.

If specified as auto, the Gain value is managed by the device. If 
configured to manual, it is user specified.

Note, when switching between auto and manual modes, Gain is updated 
to reflect the current value. If mode is auto, setting the Gain property will 
also update the mode to manual.
<SeeAlso>Gain</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="Focus">Set the focus of the camera.

Positive values set the focus closer to the camera.  Negative values set it
further away.  The unit is undefined.

Depending on the acquisition device, this property may have an associated 
mode property allowing this value to be controlled automatically by the device, 
or for it to be manually configured.
<SeeAlso>FocusMode</SeeAlso>
</AdaptorHelp>
<AdaptorHelp property="FocusMode">Specify the Focus property to be controlled manually, or automatically.

If specified as auto, the Focus value is managed by the device. If
configured to manual, it is user specified.

Note, when switching between auto and manual modes, Focus is updated
to reflect the current value.  If mode is auto, setting the Focus property will
also update the mode to manual.
<SeeAlso>Focus</SeeAlso>
</AdaptorHelp>
	</Help>
</ImageAcquisitionInfo>
